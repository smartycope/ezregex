[
    {
        "re": "'------------------FIRST REPLACEMENT---------------------'",
        "repl": "'-'",
        "base": "asdk",
        "after": "asdk"
    },
    {
        "re": "digit",
        "repl": "'*'",
        "base": "123abc",
        "after": "***abc"
    },
    {
        "re": "anyof('aeiou')",
        "repl": "'_'",
        "base": "hello",
        "after": "h_ll_"
    },
    {
        "re": "digit",
        "repl": "'#'",
        "base": "a1b2c3",
        "after": "a#b#c#"
    },
    {
        "re": "group(digit) + group(digit)",
        "repl": "rgroup(2) + rgroup(1)",
        "base": "12345",
        "after": "21435"
    },
    {
        "re": "group(anyof('aeiou'))",
        "repl": "rgroup(1) * 2",
        "base": "hello",
        "after": "heelloo"
    },
    {
        "re": "group(number)",
        "repl": "\"num:\" + rgroup(1)",
        "base": "abc123xyz456",
        "after": "abcnum:123xyznum:456"
    },
    {
        "re": "group(word_char) * 2",
        "repl": "rgroup(1) + '-' + rgroup(2)",
        "base": "Python",
        "after": "P-yt-ho-n"
    },
    {
        "re": "group(+uppercase)",
        "repl": "rgroup(1) * 2",
        "base": "HelloWorld",
        "after": "HHelloWWorld"
    },
    {
        "re": "group(+not_word)",
        "repl": "' '",
        "base": "a@b#c",
        "after": "a b c"
    },
    {
        "re": "group(digit) + group(lowercase)",
        "repl": "rgroup(1) + '_' + rgroup(2)",
        "base": "1a2b3c",
        "after": "1_a2_b3_c"
    },
    {
        "re": "group(+not_whitespace)",
        "repl": "f'<{rgroup(1)}>'",
        "base": "Hello World",
        "after": "<Hello> <World>"
    },
    {
        "re": "group(digit, 'digit') + group(lowercase, 'letter')",
        "repl": "rgroup('letter') + rgroup('digit')",
        "base": "1a2b3c",
        "after": "a1b2c3"
    },
    {
        "re": "group(anyof('aeiou'), 'vowel')",
        "repl": "f\"[{rgroup('vowel')}]\"",
        "base": "hello",
        "after": "h[e]ll[o]"
    },
    {
        "re": "'foo' + group(number, 'num') + 'bar'",
        "repl": "f\"foo-{rgroup('num')}-bar\"",
        "base": "foo87bar",
        "after": "foo-87-bar"
    },
    {
        "re": "group(word + number) + ':' + ow + group(word)",
        "repl": "replace_group(1) + ' - ' + replace_group(2)",
        "base": "test1:    thing",
        "after": "test1 - thing"
    },
    {
        "re": "group(word + number, 'a') + ':' + ow + group(word, 'b')",
        "repl": "replace_group('a') + ' - ' + replace_group('b')",
        "base": "test1:    thing",
        "after": "test1 - thing"
    },
    {
        "re": "stringStart + '(' + group(chunk + optional(',' + chunk)) + ')' + chunk",
        "repl": "'(' + '${' + rgroup(1) + '})'",
        "base": "(name, input) -> ezregex.EZRegex.EZRegex",
        "after": "(${name, input})"
    },
    {
        "re": "'------------------LAST REPLACEMENT---------------------'",
        "repl": "'-'",
        "base": "asdk",
        "after": "asdk"
    }
]